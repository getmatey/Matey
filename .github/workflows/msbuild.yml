name: MSBuild

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [ "created" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - uses: actions/upload-artifact@master
      if: github.event_name == 'release' && github.event.action == 'created'
      with:
        name: Setup
        path: .\Matey.Setup\bin\Release

    - uses: actions/upload-artifact@master
      if: github.event_name == 'release' && github.event.action == 'created'
      with:
        name: Executable
        path: .\Matey\bin\Release

  release:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: build
    runs-on: windows-latest
    permissions: write-all
    
    steps:
    - uses: actions/download-artifact@master
      with:
        name: Setup
        path: .\Matey.Setup\bin\Release
        
    - uses: actions/download-artifact@master
      with:
        name: Executable
        path: .\Matey\bin\Release

    - name: Upload Installer Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: .\Matey.Setup\bin\Release\Matey.msi
        asset_name: Matey.msi
        asset_content_type: application/octet-stream

    - name: Upload Executable Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: .\Matey\bin\Release\net6.0\Matey.exe
        asset_name: Matey.exe
        asset_content_type: application/octet-stream
